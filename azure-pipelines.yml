trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  status: 'fail'

steps:
- checkout: self
  persistCredentials: "true"

- powershell: (new-object System.Net.WebClient).DownloadFile('http://www.nespowerpak.com/nesasm/NESASM3.zip','NESASM3.zip')
  displayName: 'Download NESASM3 for Windows'
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: ExtractFiles@1
  displayName: 'Extract files'
  inputs:
    archiveFilePatterns: NESASM3.zip
    destinationFolder: NESASM3
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: Bash@3
  displayName: 'Check build folder'
  inputs:
    targetType: 'inline'
    script: 'cd build && rm screenshot.png && ls'
  continueOnError: true
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: CmdLine@2
  displayName: 'Assemble source file (.NES ROM)'
  inputs:
    script: 'D:\a\1\s\NESASM3\NESASM3.exe D:\a\1\s\w2.asm'
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: Bash@3
  displayName: 'Check assembly status'
  inputs:
    targetType: 'inline'
    script: |
      result=$(D:/a/1/s/NESASM3/NESASM3.exe D:/a/1/s/w2.asm | grep error)
      echo $result
      echo "##vso[task.setvariable variable=status]$result"
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))
      
- task: Bash@3
  displayName: 'Fail build only if assembly fails'
  inputs:
    targetType: 'inline'
    script: exit 1
  condition: contains(variables['status'], 'error')

- powershell: (new-object System.Net.WebClient).DownloadFile('https://downloads.sourceforge.net/project/fceultra/Binaries/2.2.3/fceux-2.2.3-win32.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ffceultra%2Ffiles%2FBinaries%2F2.2.3%2Ffceux-2.2.3-win32.zip%2Fdownload&ts=1559878465','FCEUX.zip')
  displayName: 'Download FCEUX for Windows'
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: ExtractFiles@1
  displayName: 'Extract files'
  inputs:
    archiveFilePatterns: FCEUX.zip
    destinationFolder: build/fceux
    cleanDestinationFolder: false
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- powershell: Start-Process D:\a\1\s\build\fceux\fceux.exe "-lua D:\a\1\s\build\screenshot.lua D:\a\1\s\w2.nes"
  displayName: 'Run FCEUX'
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: Bash@3
  displayName: 'Configure git'
  inputs:
    targetType: 'inline'
    script: git config user.email "partytimehexcellent@gmail.com" && git config user.name "w2 Build Pipeline"
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))

- task: Bash@3
  displayName: 'Push screenshot back to branch'
  env:
      PRBRANCH: $(System.PullRequest.SourceBranch)
  inputs:
    targetType: 'inline'
    script: echo $PRBRANCH && cd D:/a/1/s/build && ls && git add screenshot.png && git commit -m "Adds screenshot from build pipeline [skip ci]." && git push origin HEAD:$PRBRANCH
  condition: not(contains(variables['Build.SourceVersionMessage'], '[skip ci]'))